{"version":3,"sources":["../../../src/routes/articleRouter/articleRoute.js"],"names":["router","post","req","res","newArticle","body","save","err","article","send","json","author","title","get","find","articles","findById","params","id","findByIdAndUpdate","updatedArticle","findByIdAndRemove","deletedArticle","module","exports"],"mappings":";;AAAA;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,SAAS,sBAAf;;AAEA;;AAEA;AACA;;AAEAA,OAAOC,IAAP,CAAY,MAAZ,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,QAAMC,aAAa,sBAAYF,IAAIG,IAAhB,CAAnB;;AAEAD,eAAWE,IAAX,CAAgB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC9B,YAAID,GAAJ,EAAS;AACLJ,gBAAIM,IAAJ,CAASF,GAAT;AACH;AACDJ,YAAIO,IAAJ,CAAS,EAAE,8BAA2BF,QAAQG,MAAnC,YAA+CH,QAAQI,KAAvD,6BAAF,EAAT;AACH,KALD;AAOH,CAVD;;AAYA;AACA;;AAEAZ,OAAOa,GAAP,CAAW,GAAX,EAAgB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC1B,sBAAQW,IAAR,CAAa,UAACP,GAAD,EAAMQ,QAAN,EAAmB;AAC5B,YAAIR,GAAJ,EAAS;AACLJ,gBAAIM,IAAJ,CAASF,GAAT;AACH;AACDJ,YAAIO,IAAJ,CAASK,QAAT;AACH,KALD;AAMH,CAPD;;AASA;AACA;;AAEAf,OAAOa,GAAP,CAAW,MAAX,EAAmB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC7B,sBAAQa,QAAR,CAAiBd,IAAIe,MAAJ,CAAWC,EAA5B,EAAgC,UAACX,GAAD,EAAMC,OAAN,EAAkB;AAC9C,YAAID,GAAJ,EAAS;AACLJ,gBAAIM,IAAJ,CAASF,GAAT;AACH;AACDJ,YAAIO,IAAJ,CAASF,OAAT;AACH,KALD;AAMH,CAPD;;AASA;AACA;;AAEAR,OAAOC,IAAP,CAAY,WAAZ,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,sBAAQgB,iBAAR,CAA0BjB,IAAIe,MAAJ,CAAWC,EAArC,EAAyChB,IAAIG,IAA7C,EAAmD,UAACE,GAAD,EAAMa,cAAN,EAAyB;AACxE,YAAIb,GAAJ,EAAS;AACLJ,gBAAIM,IAAJ,CAASF,GAAT;AACH;AACDJ,YAAIO,IAAJ,CAAS,EAAE,WAAcU,eAAeR,KAA7B,+BAAF,EAAT;AACH,KALD;AAMH,CAPD;;AASA;AACA;AACAZ,OAAOC,IAAP,CAAY,aAAZ,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrC,sBAAQkB,iBAAR,CAA0BnB,IAAIe,MAAJ,CAAWC,EAArC,EAAyC,UAACX,GAAD,EAAMe,cAAN,EAAyB;AAC9D,YAAIf,GAAJ,EAAS;AAAEJ,gBAAIM,IAAJ,CAASF,GAAT;AAAe;AAC1BJ,YAAIO,IAAJ,CAAS,EAAE,WAAcY,eAAeV,KAA7B,6BAAF,EAAT;AACH,KAHD;AAIH,CALD;;AAUAW,OAAOC,OAAP,GAAiBxB,MAAjB","file":"articleRoute.js","sourcesContent":["import {Router} from 'express';\nimport mongoose from 'mongoose';\n\nimport Article from '../../models/Article';\n\nconst router = Router();\n\n// ROUTES ARTICLES\n\n// créer un nouvel article\n// route /app/articles/add\n\nrouter.post('/add', (req, res) => {\n    const newArticle = new Article(req.body);\n\n    newArticle.save((err, article) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json({ \"success\": `L'article de ${article.author}, '${article.title}' a été ajouté` });\n    });\n\n});\n\n// afficher tous les articles\n// route /app/articles\n\nrouter.get('/', (req, res) => {\n    Article.find((err, articles) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json(articles);\n    });\n});\n\n// chercher un article par id\n// route /app/articles/:id\n\nrouter.get('/:id', (req, res) => {\n    Article.findById(req.params.id, (err, article) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json(article);\n    });\n});\n\n// éditer un article\n// route /app/articles/edit/:id\n\nrouter.post('/edit/:id', (req, res) => {\n    Article.findByIdAndUpdate(req.params.id, req.body, (err, updatedArticle) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json({ \"success\": `${updatedArticle.title} a été mis à jour` })\n    });\n});\n\n// supprimer un article\n// route /app/articles/delete/:id\nrouter.post('/delete/:id', (req, res) => {\n    Article.findByIdAndRemove(req.params.id, (err, deletedArticle) => {\n        if (err) { res.send(err) }\n        res.json({ \"success\": `${deletedArticle.title} a été supprimé` })\n    });\n});\n\n\n\n\nmodule.exports = router;"]}